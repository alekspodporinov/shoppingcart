@model ShoppingCart.BLL.ViewModels.CharacteristicViewModel

@{
    ViewBag.Title = "Создание характеристики";
}

<h2>Создание новой характеристики</h2>

@using (Html.BeginForm(Html.BeginForm("Create", "Characteristic", FormMethod.Post))) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br />
        <h4 class="text-danger field-validation-error"><b>@ViewBag.Error</b></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ParentCategoryId)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Filter, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10" style="margin-top: 14px">
                <div class="material-switch">
                    <input id="FilterSwitch" name="Filter" type="checkbox" value="true" @(Model.Filter ? "checked=\"checked\"" : "")/>
                    <label for="FilterSwitch" class="label-success"></label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top: 14px">
                <div class="material-switch">
                    <input id="PublishSwitch" name="Publish" type="checkbox" value="true" @(Model.Publish ? "checked=\"checked\"" : "") />
                    <label for="PublishSwitch" class="label-success"></label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Measure, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Measure, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Measure, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(modelItem => Model.MetaValue, new SelectList(new List<SelectListItem>
                            {
                                new SelectListItem {Text = "Целое число", Value = "int"},
                                new SelectListItem {Text = "Дробное число число", Value = "double"},
                                new SelectListItem {Text = "Да/Нет", Value = "bool"},
                                new SelectListItem {Text = "Строка", Value = "string"}
                            }, "Value", "Text"), "--Выберите тип данных для значения-- ",new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "Category", new { area = "Admin", parentCategoryId = Model.ParentCategoryId }, null)
</div>
