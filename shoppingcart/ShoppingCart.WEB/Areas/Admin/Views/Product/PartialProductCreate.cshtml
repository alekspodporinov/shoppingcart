@model ShoppingCart.BLL.ViewModels.ProductCreateViewModel

@{
    Layout = null;
}

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-2">
                            <h3>Toвар</h3>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                        @Html.HiddenFor(modelItem => Model.Id)
                        @Html.HiddenFor(modelItem => Model.ParentCategoryId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Model, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Model, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.Model, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Manufacturer, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.Manufacturer, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SerialNumber, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.SerialNumber, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Code, new {htmlAttributes = new {@class = "form-control field-product" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.Discription, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Discription, new {@id = "Discription", @class = "form-control"});
                                @Html.ValidationMessageFor(model => model.Discription, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="margin-top: 14px">
                                <div class="material-switch">
                                    <input id="PublishSwitch" name="Publish" type="checkbox" value="true" @(Model.Publish ? "checked=\"checked\"" : "") />
                                    <label for="PublishSwitch" class="label-success"></label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
